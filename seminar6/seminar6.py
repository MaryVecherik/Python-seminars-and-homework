# Урок 6. Ускоренная обработка данных: lambda, filter, map, zip, enumerate, list comprehension. Продолжение

def task1():
    """
    Вводятся названия городов в одну строчку через запятую. Необходимо определить функцию map,
    которая бы возвращала названия городов только длиной более 5 символов. 
    Вместо остальных названий - строку с дефисом ("-").
    Сформировать список из полученных значений и отобразить его на экране в одну строчку через запятую.
    Ввод:
    Москва,Уфа,Вологда,Тула,Владивосток,Хабаровск
    Вывод:
    Москва,-,Вологда,-,Владивосток,Хабаровск
    """
    # Вариант мой
    stroka = 'Москва,Уфа,Вологда,Тула,Владивосток,Хабаровск'
    stroka = list(map(str, stroka.split(',')))
    data = []
    for i in stroka:
        if len(i) < 5:
            data.append("-")
        else:
            data.append(i)
    print(','.join(data))

    # Вариант преподавателя
    citys = 'Москва,Уфа,Вологда,Тула,Владивосток,Хабаровск'
    a = list(map((lambda x: x if len(x) > 5 else '-'), citys.split(',')))
    print(','.join(a))

def task2():
    """
    На вход программы поступает строка в формате: ключ_1=значение_1 ключ_2=значение_2 ... ключ_N=значение_N
    Необходимо с помощью функции map преобразовать ее в кортеж tp вида:
    tp = (('ключ_1', 'значение_1'), ('ключ_2', 'значение_2'), ..., ('ключ_N', 'значение_N'))
    Ввод:
    house=дом car=машина men=человек tree=дерево
    Вывод:
    (('house', 'дом'), ('car', 'машина'), ('men', 'человек'), ('tree', 'дерево'))
    """
    stroka = 'house=дом car=машина men=человек tree=дерево'.split()
    # Вариант 1
    data = tuple(map(lambda x: tuple(x.split('=')), stroka))
    print(f'Вариант 1 -> {data}')
    # Вариант 2
    data = {}
    for i in (stroka):
        a, b = i.split('=')
        data[a] = b
    print(f'Вариант 2 -> {data}')


task2()